apiVersion: v1
kind: Service
metadata:
  name: spring-boot
  annotations:
    cloud.google.com/app-protocols: '{"https-port":"HTTPS","http-port":"HTTP"}'
  labels:
    app: spring-boot
spec:
  ports:
    - name: https-port
      port: 8443
    - name: http-port
      port: 8084
  selector:
    app: spring-boot
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: spring-boot
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: spring-boot
        version: v1
    spec:
      containers:
        - name: spring-boot
          image: eu.gcr.io/YOUR_PROJECT/spring-boot:latest
          resources:
            requests:
              memory: "256Mi"
            limits:
              memory: "512Mi"
          volumeMounts:
            - name: privatekey
              mountPath: "/etc/private_key"
              readOnly: true
            - name: publickey
              mountPath: "/etc/public_key"
              readOnly: true
          env:
            - name: JAVA_OPTS
              value: -Xms256m -Xmx512m
            - name: SERVER_PORT
              value: "8084"
            - name: SPRING_PROFILES_ACTIVE
              value: prod
            - name: SPRING_DATA_MONGODB_URI
              value: mongodb://mongodb:27017
            - name: SPRING_DATA_MONGODB_DATABASE
              value: docker
            - name: PRIVATE_KEY_PATH
              value: /etc/private_key/dummy_privateKey.pem
            - name: PUBLIC_KEY_PATH
              value: /etc/public_key/dummy_publicKey.pem
            - name: LOGGING_LEVEL_COM_GITHUB_SPRINGBOOT
              value: debug
#            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB
#              value: debug
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY
              value: debug
          ports:
            - containerPort: 8084
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /actuator/health
              port: 8084
            initialDelaySeconds: 200
            periodSeconds: 5
      volumes:
        - name: publickey
          secret:
            secretName: publickey
        - name: privatekey
          secret:
            secretName: privatekey
